#pragma checksum "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "64767d55accb625fc0b10cb57c14c6706dc25206"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Employees_EmpInfo), @"mvc.1.0.view", @"/Views/Employees/EmpInfo.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\_ViewImports.cshtml"
using AZUL.COM;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\_ViewImports.cshtml"
using AZUL.COM.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64767d55accb625fc0b10cb57c14c6706dc25206", @"/Views/Employees/EmpInfo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"9e419cb68d7441d90842286bec0e0af2d67534ec", @"/Views/_ViewImports.cshtml")]
    public class Views_Employees_EmpInfo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<AZUL.COM.Models.Employee>>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
  
    ViewData["Title"] = "EmpInfo";
    Layout = "~/Views/Shared/AccDash_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1 style=\"margin:60px;\">Salary Reports</h1>\r\n<div id=\"tab\">\r\n    <table class=\"table\" style=\"margin:60px;\">\r\n        <thead>\r\n            <tr>\r\n                <th>\r\n                    ");
#nullable restore
#line 14 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
               Write(Html.DisplayNameFor(model => model.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
#nullable restore
#line 17 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
               Write(Html.DisplayNameFor(model => model.Salary));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
#nullable restore
#line 20 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
               Write(Html.DisplayNameFor(model => model.Profits));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </th>\r\n                <th>\r\n                    ");
#nullable restore
#line 23 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
               Write(Html.DisplayNameFor(model => model.Losses));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                </th>\r\n\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n");
#nullable restore
#line 30 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
             if (Model != null)
            {
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 32 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                 foreach (var item in Model)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>\r\n                            ");
#nullable restore
#line 36 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                       Write(Html.DisplayFor(modelItem => item.Name));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n\r\n                        <td>\r\n                            ");
#nullable restore
#line 40 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                       Write(Html.DisplayFor(modelItem => item.Salary));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
#nullable restore
#line 43 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                       Write(Html.DisplayFor(modelItem => item.Profits));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
#nullable restore
#line 46 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                       Write(Html.DisplayFor(modelItem => item.Losses));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n\r\n\r\n                    </tr>\r\n");
#nullable restore
#line 51 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 51 "C:\Users\Dell\Desktop\The First Project\AZUL.COM\Views\Employees\EmpInfo.cshtml"
                 }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"        </tbody>
    </table>
</div>
<div class=""d-flex justify-content-center"">
    <button id=""export1"" onclick=""exportTableToCSV('report.csv')"" class=""btn btn-success text-white btn-lg "" style=""margin:20px 10px"">Excel</button>
    <button id=""export2"" onclick=""createPDF()"" class=""btn btn-danger btn-lg"" style=""margin:20px 10px""> PDF</button>
</div>
<script>



            function exportTableToCSV(filename) {
                var csv = [];
                var rows = document.querySelectorAll(""table tr"");
                for (var i = 0; i < rows.length; i++) {
                    var row = [], cols = rows[i].querySelectorAll(""td, th"");
                    for (var j = 0; j < cols.length; j++)
                        row.push(cols[j].innerText);
                    csv.push(row.join("",""));
                }

                downloadCSV(csv.join(""\n""), filename);
            }

            function downloadCSV(csv, filename) {
                var csvFile;
                var downloadLi");
            WriteLiteral(@"nk;

                csvFile = new Blob([csv], { type: ""text/csv"" });

                downloadLink = document.createElement(""a"");

                downloadLink.download = filename;
                downloadLink.href = window.URL.createObjectURL(csvFile);

                downloadLink.style.display = ""none"";

                document.body.appendChild(downloadLink);

                downloadLink.click();
            }


            function createPDF() {
                var sTable = document.getElementById('tab').innerHTML;

                var style = ""<style>"";
                style = style + ""table {width: 100%;font: 17px Calibri;}"";
                style = style + ""table, th, td {border: solid 1px #DDD; border-collapse: collapse;"";
                style = style + ""padding: 2px 3px;text-align: center;}"";
                style = style + ""</style>"";

                // CREATE A WINDOW OBJECT.
                var win = window.open('', '', 'height=700,width=700');

                wi");
            WriteLiteral(@"n.document.write('<html><head>');
                win.document.write('<title>Profile</title>');   // <title> FOR PDF HEADER.
                win.document.write(style);          // ADD STYLE INSIDE THE HEAD TAG.
                win.document.write('</head>');
                win.document.write('<body>');
                win.document.write(sTable);         // THE TABLE CONTENTS INSIDE THE BODY TAG.
                win.document.write('</body></html>');

                win.document.close(); 	// CLOSE THE CURRENT WINDOW.

                win.print();    // PRINT THE CONTENTS.
            }


            var htmlTableToExcel = function (tableId, fileName = '') {
                var downloadedFileName = 'excel_table_data';
                var TableDataType = 'application/vnd.ms-excel';
                var selectTable = document.getElementById(tableId);
                var htmlTable = selectTable.outerHTML.replace(/ /g, '%20');

                filename = filename ? filename + '.xls' : downloadedF");
            WriteLiteral(@"ileName + '.xls';
                var downloadingURL = document.createElement(""a"");
                document.body.appendChild(downloadingURL);

                if (navigator.msSaveOrOpenBlob) {
                    var blob = new Blob(['\ufeff', htmlTable], {
                        type: TableDataType
                    });
                    navigator.msSaveOrOpenBlob(blob, fileName);
                } else {

                    downloadingURL.href = 'data:' + TableDataType + ', ' + htmlTable;
                    downloadingURL.download = fileName;
                    downloadingURL.click();
                }
            }

            function printTable() {
                var el = document.getElementById(""tableData"");

                el.setAttribute('border', '5px');
                el.setAttribute('cellpadding', '5');
                el.setAttribute('color', 'green');
                newPrint = window.open("""");
                newPrint.document.write(el.outerHTML);
          ");
            WriteLiteral("      newPrint.print();\r\n                newPrint.close();\r\n            }\r\n\r\n</script>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<AZUL.COM.Models.Employee>> Html { get; private set; }
    }
}
#pragma warning restore 1591
